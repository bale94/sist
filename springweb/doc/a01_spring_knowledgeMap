# 스프링의 지식체계 계열화
1. 스프링의 기본개념 이해
	1) 스프링 mvc
	2) 컨테이너
	3) 제어역전
2. 개발 환경 설정
	1) dynamic web project 생성
	2) lib: 필요한 jar 넣기
	3) 컨테이너 설정(dispatcher-servlet.xml)
		springweb\src\main\webapp\WEB-INF
		하위에 파일만들기
	4) web.xml: 프레임워크에서 지원하는 front controller 선언, 요청값에 대한
		한글 처리위한 filtering 선언
		http://localhost:7080/springweb/
	5) 초기화면 로딩 위한 controller/view/model 처리
	6) 기본적인 frontend단 모듈설정(bootstrap/jquery)

3. 스프링의 MVC 기본처리 순서
	0) controller 클래스 선언: 패지키명.클래스명 ==> dispatcher-servlet.xml에 bean등록
		view단(jsp)파일 WEB-INF 하위에 폴더와 파일을 생성
		ex) bororo/01, bororo/02, bororo/03
		==> 위와 같이 경로를 알면 접근하는 방식을 처리하지 못하기위해 WEB-INF에
		특정한 경로와 파일로 view단을 호출하게 하였다
		- WEB-INF는 보안이 적용된 폴더로 서버에서 코드로 호출하지 않으면 외부 url로 
		접근이 불가능하게 되어있다.
		
	1) controller 선언
		@Controller: 클래스명 위에 선언
	2) url에서 기능 메소드 별로 접근할 수 있는 메소드 선언
		// http://localhost:7080/springweb/call01.do
		@RequestMapping("call01.do")
		public String call01(){
			
			return "view단 경로 및 파일 설정";
		}
	3) 요청값 처리
	4) 리턴형식으로 view단 호출	default로 forward형식이기에 model데이터를 함께 전송이 가능하다.
		- forward: request, response
		- redirect: 페이지를 호출할 때 모델값 전달 못함(session값은 전달)
			

4. 스프링 컨테이너 이해를 위한 DI(제어역전)/AOP

5. 스프링 MVC 심화

6. 스프링에서 database 처리를 위한 mybatis framework

7. 기타 실무예제
	1) 파일 업로드
	2) ajax 처리
	3) 웹 소켓을 활용한 실시간 채팅
	4) 다국어 처리
	5) 답변형게시판(리스트/등록/상세화면/등록/수정/답글달기/파일업로드/페이지처리)
		= spring boot 환경에서 게시판 처리
	6) 스프링에서 session 처리
	7) 메일 발송 처리
	8) jquery lib	fullcalender
	
	
	
	
	
	
	
	
	
	
	
	
	
	