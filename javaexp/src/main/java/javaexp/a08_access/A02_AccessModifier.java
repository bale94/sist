package javaexp.a08_access;

public class A02_AccessModifier {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		# 접근 제한자
		1. 클래스 및 클래스의 구성 멤버에 대한 접근을 제한하는 역할
			1) 다른 패키지에서 클래스를 사용하지 못하도록(클래스 제한)
				(public) class 클래스명{}
				==> 외부패키지에서 클래스명 참조변수;
				ex) Person p01; 같은 패키지일때는 public이 없어도 되지만
					다른 패키지일때는 public을 선언하지 않으면 에러발생
					(접근제한자 에러)
			2) 클래스로부터 객체를 생성하지 못하도록 (생성자 제한)
				public class 클래스명{
					// (public) 생성자(){} default 생성자 선언
					(public) 생성자(){}
				}
				==> 외부패키지에서 참조변수 = new 생성자();
				ex) p01 = new Person();
					// 외부패키지일때는 default생성자 이거나 명시적으로 public을 선언하여야 한다.****
					 * 
			3) 특정 필드와 메소드를 숨김처리(필드와 메소드 제한)
				private String name;
				public void call(){}
		2. 접근 제한자의 종류
			1) *public[이것만 외부패키지에서 접근가능], protected,
				*default(X)[같은패키지 내에서만 접근가능], *private[다른 접근불가]
			cf) 외부 패키지에서 해당 클래스나, 클래스 소속 멤버들을 사용할 떄
				import 패키지명.클래스명, 패키지명.클래스명
				접근제한자가 public이어야 한다.                import와 public 두가지를 모두만족해야 외부패키지에서사용가능
			
		# 외부 클래스의 필드에 대한 접근 제한을 처리
		1. 선녀와 나무꾼
			1)
				연민의 정( 나무꾼, 사슴 )
					나무꾼 - 사슴이 숨은 곳(수풀 속)
				사냥꾼
				같은 패키지에 있는 클래스 끼리만 접근이 가능하고, 외부 패키지에서
				접근이 불가능한 접근 제어자 : default(X) - 접근제어자가 붙지않는것 -> 사냥꾼이라는 외부패키지가 나무꾼의
				패키지에는 접근이 불가능하여 숨은곳을 알수없다.
			2) 연민의 정(나무꾼, 사슴)
				사슴: 언제 어디로 선녀가 내려오는지?
				나무꾼: 선녀의 날개옷을 숨긴 곳 - 이 객체만 접근할 수 있는 정보
					객체 내부에서만 전역적으로 사용하고, 외부 객체를 통해서는 접근이 불가능한
					접근 제어자 private
				
		2. 나무꾼이 가정을 만들고, 아들을 장가까지 보내는 이야기 - (상속)
			1) 나무꾼의 집
				나무꾼(개인비밀, 우리집생활비, 상속재산, 막내딸 결혼식)
				선녀, 둘째아들, 막내딸
			2) 첫쨰아들의 집
				첫째아들, 첫째며느리
				protected 접근제어자는 상속관계에 있는 외부패키지의 하위클래스까지 접근이 가능하다
			3) 이웃아저씨집
				아저씨
			
		 * */

	}

}
